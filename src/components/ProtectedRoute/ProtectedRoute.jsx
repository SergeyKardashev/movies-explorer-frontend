// import React from 'react';
// import { Navigate } from 'react-router-dom';

// function ProtectedRouteElement({ element: Component, ...props }) {
//   console.log('ProtectedRouteElement');
//   return (props.allowedToSee
//     ? <Component {...props} />
//     : <Navigate to="/" replace />);
// }

// export default ProtectedRouteElement;

// üî¥ –≤–∞—Ä–∏–∞–Ω—Ç - –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É url
// –µ—Å–ª–∏ —É—Ä–ª = –ª–æ–≥–∏–Ω—É –∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, —Ç–æ –∫–∏–¥–∞—Ç—å –Ω–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é, –∞ –Ω–∞ —Ñ–∏–ª—å–º—ã

//
//
//
//
// import React from 'react';
// import { Navigate, useLocation } from 'react-router-dom';

// function ProtectedRouteElement({ element: Component, allowedToSee, ...props }) {
//   const location = useLocation();

//   // –ï—Å–ª–∏ allowedToSee —Ç—Ä—É, —Ç–æ —Ä–∏—Å—É—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
//   if (allowedToSee && (location.pathname === '/signin' || location.pathname === '/signup')) {
//     return <Component {...props} />;
//   }
//   // –ï—Å–ª–∏ allowedToSee –ª–æ–∂–Ω–æ, —Ç–æ –Ω–∞–ø—Ä–∞–≤–ª—è—é –Ω–∞ –≥–ª–∞–≤–Ω—É—é –∏–ª–∏ –Ω–∞ –õ–æ–≥–∏–Ω –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
//   return <Navigate to="/" replace />;
// }

// export default ProtectedRouteElement;
//
//
//
//
// import React from 'react';
// import { Navigate } from 'react-router-dom';

// function ProtectedRouteElement({ element: Component, allowedToSee, ...props }) {
//   // –ï—Å–ª–∏ allowedToSee —Ç—Ä—É, —Ç–æ —Ä–∏—Å—É—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
//   if (allowedToSee) {
//     return <Component {...props} />;
//   }
//   // –ï—Å–ª–∏ allowedToSee –ª–æ–∂–Ω–æ, —Ç–æ –Ω–∞–ø—Ä–∞–≤–ª—è—é –Ω–∞ –≥–ª–∞–≤–Ω—É—é –∏–ª–∏ –Ω–∞ –õ–æ–≥–∏–Ω –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
//   return <Navigate to="/" replace />;
// }

// export default ProtectedRouteElement;
//
//
//
//
//
import React from 'react';
import { Navigate } from 'react-router-dom';

function ProtectedRouteElement({
  element: Component,
  allowedToSee,
  redirectTo = '/', ...rest
}) {
  return allowedToSee ? <Component {...rest} /> : <Navigate to={redirectTo} replace />;
}

export default ProtectedRouteElement;
