import React, { useEffect, useState } from 'react';
import { Route, Routes, useNavigate } from 'react-router-dom';
import './App.css';
import Main from '../Main/Main';
import Login from '../Login/Login';
import Register from '../Register/Register';
import Profile from '../Profile/Profile';
import Header from '../Header/Header';
import MenuPopup from '../MenuPopup/MenuPopup';
import NotFound from '../NotFound/NotFound';
import Footer from '../Footer/Footer';
import Movies from '../Movies/Movies';
import SavedMovies from '../SavedMovies/SavedMovies';
import clearLocalStorage from '../utils/clearLocalStorage';
import createUser from '../utils/MainApi';
import { useLocalStorageState as useStorage } from '../utils/hooks';

function App() {
  const navigate = useNavigate();

  const [isLoggedIn, setIsLoggedIn] = useStorage('isLoggedIn', false);
  const [isMenuPopupOpen, setIsMenuPopupOpen] = useState(false);
  const [user, setUser] = useStorage('user', { userName: '', userEmail: '', userPassword: '' });

  const urlWithHeader = ['/', '/movies', '/saved-movies', '/profile'];
  const urlWithFooter = ['/', '/movies', '/saved-movies'];

  const cbCloseMenuPopup = () => { setIsMenuPopupOpen(false); };

  // –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤—ã—Å—Ç–∞–≤–ª—è—é —Å—Ç–µ–π—Ç –∑–Ω–∞—á–µ–Ω–∏–µ–º –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
  useEffect(
    () => { setIsLoggedIn(JSON.parse(localStorage.getItem('isLoggedIn'))); },
    [],
  );

  const cbRegister = async (e) => {
    e.preventDefault();
    const fetchedUser = await createUser(user);
    // üü¢ –∞–ø–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —é–∑–µ—Ä–∞ –≤ –æ–±—ä–µ–∫—Ç–µ –≤–∏–¥–∞ { name, email, _id }
    // üü¢ –ê —Ñ—É–Ω–∫—Ü–∏–∏ —Ñ—Ä–æ–Ω—Ç–∞ –æ–∂–∏–¥–∞—é—Ç –ø–æ–ª—è userName, userEmail, userPassword
    // üü¢ –ø–æ—ç—Ç–æ–º—É –Ω–µ–ª—å–∑—è –ø—Ä–æ—Å—Ç–æ –∑–∞–ø–∏—Å–∞—Ç—å –≤ —Å—Ç–µ–π—Ç —é–∑–µ—Ä–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é fetchedUser

    // üü¢ –ú–æ–∂–Ω–æ –ø–æ—à—Ç—É—á–Ω–æ –æ–±–Ω–æ–≤–ª—è—Ç—å –ø–æ–ª—è —Å—Ç–µ–π—Ç–∞
    // üü° –ø—Ä–∏ —Ç–∞–∫–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–µ–π—Ç–∞ –≤ –Ω–µ–º —Ö—Ä–∞–Ω–∏—Ç—Å—è –ø–∞—Ä–æ–ª—å. –ê –Ω–µ –¥–æ–ª–∂–µ–Ω.
    // üü° –ü–æ—Å–ª–µ —Å–∞–±–º–∏—Ç–∞ –Ω—É–∂–Ω–æ —É–¥–∞–ª—è—Ç—å –ø–∞—Ä–æ–ª—å –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –∏–ª–∏ —Å–¥–µ–ª–∞—Ç—å undefined
    // user.userEmail = fetchedUser.email;
    // user.userName = fetchedUser.name;
    // user.userId = fetchedUser._id;
    // delete user.userPassword; // –∏–ª–∏ —Ç–∞–∫ user.userPassword = undefined;

    // üü¢ –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –æ–±—ä–µ–∫—Ç —Ü–µ–ª–∏–∫–æ–º –∏ –æ—Ç–¥–∞—Ç—å –µ–≥–æ –≤ setUser
    const userFromApi = {
      userEmail: fetchedUser.email,
      userName: fetchedUser.name,
      userId: fetchedUser._id,
    };

    // üü° setUser —Å–¥–µ–ª–∞–Ω –∫–∞—Å—Ç–æ–º–Ω—ã–º —Ö—É–∫–æ–º –∏ –ø–∏—à–µ—Ç –≤ —Å—Ç–µ–π—Ç+–õ–°. –°–ª–µ–¥—É—é—â–∏–µ 2 —Å—Ç—Ä–æ–∫–∏ –Ω–µ –Ω—É–∂–Ω—ã
    // localStorage.setItem('user', JSON.stringify(fetchedUser));
    // setUser(fetchedUser);

    // —Ç.–∫. —Å—Ç–µ–π—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π, –∫–æ–Ω—Å–æ–ª–∏—Ç—Å—è —Å—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
    // –ü–µ—Ä–µ–¥–µ–ª—ã–≤–∞—é –≤ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ —Å—Ç–µ–π—Ç-–∫–æ–ª–±—ç–∫
    // –≤–º–µ—Å—Ç–æ setUser(userFromApi); –¥–µ–ª–∞—é:
    // setUser(() => userFromApi);
    // console.log('user', user);

    setUser(userFromApi);
    setIsLoggedIn(true);
    navigate('/movies', { replace: false });
  };

  const cbLogin = (formData) => {
    let userFromLS = JSON.parse(localStorage.getItem('user'));
    if (!userFromLS) {
      userFromLS = formData;
    } else {
      userFromLS.userEmail = formData.userEmail;
      userFromLS.userPassword = formData.userPassword;
    }
    localStorage.setItem('user', JSON.stringify(userFromLS));
    setUser((state) => ({
      ...state,
      userEmail: formData.userEmail,
      userPassword: formData.userPassword,
    }));
    setIsLoggedIn(true);
    navigate('/movies', { replace: false });
  };

  const handleMenuClick = () => { setIsMenuPopupOpen(true); };

  const cbLogOut = () => {
    setIsLoggedIn(false);
    clearLocalStorage();
    setUser({ userName: '', userEmail: '', userPassword: '' });
    navigate('/', { replace: false });
  };

  // –æ—Ç–¥–∞—é –≤ –ø—Ä–æ–ø—Å—ã –ü–†–û–§–ò–õ–Ø —á—Ç–æ–±—ã –Ω–µ –ø—É—Ç–∞—Ç—å —Å —é–∑–µ—Ä–æ–º
  // –∏ —á—Ç–æ–± —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –º–µ–Ω—è–ª–∏—Å—å –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ—Ä–µ–Ω–¥–µ—Ä–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  const initialUser = JSON.parse(localStorage.getItem('user') || '{}');

  const cbUpdateUser = async (userData) => {
    // –∑–∞–º–µ–Ω–∏–ª —á–∞—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏. –∏–≤–µ–Ω—Ç —É—à–µ–ª –≤ –¥–æ—á–∫—É. –ò–∑ –¥–æ—á–∫–∏ –≤–µ—Ä–Ω–µ—Ç—Å—è —é–∑–µ—Ä. –ï–≥–æ –æ—Ç–¥–∞–º –∞–ø–∏—à–∫–µ
    // const cbUpdateUser = async (e) => {
    // e.preventDefault();
    const mainApiUrl = 'http://localhost:3000';
    const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NWExMjAyYWFhNTk4MDQyNDgzNjdjMTUiLCJpYXQiOjE3MDUwNTg1NDEsImV4cCI6MTcwNTY2MzM0MX0.WaPGYMDmTNfsBeR_LrUs1M3JkEZTAzKXg86qeBr_tAA';
    // –æ—Ç–ø—Ä–∞–≤–ª—è—é –Ω–æ–≤–æ–≥–æ —é–∑–µ—Ä–∞ –≤ –ê–ü–ò, –ø–æ–ª—É—á–∞—é –æ—Ç–≤–µ—Ç.
    try {
      const response = await fetch(`${mainApiUrl}/users/me`, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${token}`,
        },
        body: JSON.stringify({
          email: userData.userEmail,
          name: userData.userName,
        }),
      }).then((res) => {
        if (!res.ok) return Promise.reject(new Error(`–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –≥–ª–∞–≤–Ω–æ–º—É –ê–ü–ò: ${res.status}`));
        return res.json();
      });

      console.log('response (user) is ', response);
      const userToSetState = {
        userEmail: response.email,
        userName: response.name,
        userId: user._id,
      };
      setUser(userToSetState);
      navigate('/', { replace: true });
    } catch (error) {
      console.log(error);
      // üî¥ –≤—ã–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –Ω–∞–¥ –∫–Ω–æ–ø–∫–æ–π. –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∏ –æ—Ç–¥–∞—Ç—å –µ–µ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
    }

    // –í—ã–Ω–µ—Å—Ç–∏ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ê–ü–ò—à–∫–µ –≤–æ –≤–Ω–µ—à–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é. –¢—É—Ç –±—É–¥–µ—Ç —Ç–∞–∫:
    // const response = await updateUser(user);

    // –ï—Å–ª–∏ –û–ö - –æ–±–Ω–æ–≤–ª—è—é —Å—Ç–µ–π—Ç —é–∑–µ—Ä–∞ (–∞–≤—Ç–æ–º–∞—Ç–æ–º –∏ –õ–°), –∏–¥—É –Ω–∞ –≥–ª–∞–≤–Ω—É—é.
    // –ï—Å–ª–∏ –ù–ï –æ–∫ - –æ–±–Ω–æ–≤–ª—è—é –æ—à–∏–±–∫–∞ –Ω–∞–¥ –∫–Ω–æ–ø–∫–æ–π, –≤–æ–∑–≤—Ä–∞—Ç –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏. –ù–ï –∏–¥—É –Ω–∞ –≥–ª–∞–≤–Ω—É—é

    // —Å—Ç–∞—Ä—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Ñ—É–Ω–∫—Ü–∏–∏:
    // e.preventDefault();
    // const userFromStorage = JSON.parse(localStorage.getItem('user') || '{}');
    // // –û–±–Ω–æ–≤–ª—é –¥–∞–Ω–Ω—ã–µ —é–∑–µ—Ä–∞, —Å–æ—Ö—Ä–∞–Ω–∏–≤ –ø–∞—Ä–æ–ª—å
    // const updatedUser = { ...user, userPassword: userFromStorage.userPassword };
    // // –°–æ—Ö—Ä–∞–Ω—é –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å—Ç–µ–π—Ç –∏ –õ–° –∫–∞—Å—Ç–æ–º–Ω—ã–º —Ö—É–∫–æ–º
    // // localStorage.setItem('user', JSON.stringify(updatedUser));
    // setUser(updatedUser);
    // navigate('/', { replace: true });
  };

  return (
    <>
      <Header
        urlWithHeader={urlWithHeader}
        isLoggedIn={isLoggedIn}
        onMenuClick={handleMenuClick}
      />

      <Routes>
        <Route path="/" element={<Main />} />
        <Route path="/movies" element={<Movies />} />
        <Route path="/saved-movies" element={<SavedMovies />} />
        <Route
          path="/signin"
          element={<Login onSubmit={cbLogin} />}
        />
        <Route
          path="/signup"
          element={(
            <Register
              user={user}
              setUser={setUser}
              onSubmit={cbRegister}
            />
          )}
        />
        <Route
          path="/profile"
          element={(
            <Profile
              onSubmit={cbUpdateUser}
              onLogOut={cbLogOut}
              user={user}
              setUser={setUser}
              initialUser={initialUser}
            />
          )}
        />
        <Route path="/*" element={<NotFound />} />
      </Routes>

      <Footer urlWithFooter={urlWithFooter} />

      <MenuPopup
        onClose={cbCloseMenuPopup}
        isMenuPopupOpen={isMenuPopupOpen}
      />
    </>
  );
}

export default App;
