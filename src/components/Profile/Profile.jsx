/* eslint-disable max-len */
import React, { useState, useEffect, useContext } from 'react';
// import { useNavigate } from 'react-router-dom';
import './Profile.css';
import handleUserFormChange from '../../utils/handleUserFormChange';
import CurrentUserContext from '../../contexts/CurrentUserContext';
import {
  updateUserApi,
  // eslint-disable-next-line no-unused-vars
  updateUserApiError,
} from '../../utils/MainApi';
import processUser from '../../utils/processUser';

function Profile(props) {
  const { onLogOut } = props;

  // const navigate = useNavigate();

  const currentUserState = useContext(CurrentUserContext);
  const [currentUser, setCurrentUser] = currentUserState;
  const [errors, setErrors] = useState({ userName: ' ', userEmail: ' ', userPassword: ' ' });
  const [apiError, setApiError] = useState('');
  const [apiSuccess, setApiSuccess] = useState('');
  const [liveUser, setLiveUser] = useState(currentUser);
  // –õ–∞–π–≤ –Æ–∑–µ—Ä - –∑–∞–º–µ–Ω–∞ —Å—Ç–µ–π—Ç—É –Æ–∑–µ—Ä–∞ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞. –î–ª—è —É–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö –∏–Ω–ø—É—Ç–æ–≤.
  // –í –≥–ª–∞–≤–Ω–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ —Å—Ç–µ–π—Ç –∞–≤—Ç–æ–º–∞—Ç–æ–º –ø–∏—à–µ—Ç –≤ –õ–°. –¢—É—Ç —ç—Ç–æ –≤—Ä–µ–¥–∏—Ç.
  // –¢.–∫. –ª—é–±–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω–ø—É—Ç–æ–≤ –∑—Ä—è –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ –õ–°.
  // –Æ–∑–µ—Ä –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–∞–±–º–∏—Ç–∞.
  // const [liveUser, setLiveUser] = useState(initialUser);

  const [isEditMode, setIsEditMode] = useState(false);
  const [isDataUpdated, setIsDataUpdated] = useState(false);

  // –æ–±–Ω–æ–≤–ª—è—é —Å—Ç–µ–π—Ç –∫–Ω–æ–ø–∫–∏ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —é–∑–µ—Ä–∞ (–ø—Ä–∏–≤—è–∑–∞–Ω –∫ –ø–æ–ª—è–º)
  // –ö–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –¥–∞–Ω–Ω—ã–µ —é–∑–µ—Ä–∞ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ö—É–∫, –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–π –∏ —Ç–¥
  useEffect(() => {
    const dataChanged = liveUser.userName !== currentUser.userName
      || liveUser.userEmail !== currentUser.userEmail;
    setIsDataUpdated(dataChanged);
  }, [liveUser, currentUser]);

  const editBtnClassName = `profile__btn profile__btn_edit
  ${isEditMode ? ' profile__btn_hidden' : ''}`;

  const saveBtnClassName = `profile__btn profile__btn_save
  ${!isDataUpdated ? ' profile__btn_disabled' : ''}
  ${!isEditMode ? ' profile__btn_hidden' : ''}`;

  const logoutBtnClassName = `profile__btn profile__btn_logout
  ${isEditMode ? 'profile__btn_hidden' : ''}`;

  // –ø—Ä–æ–≤–µ—Ä—è—é –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –ª–∏ –¥–∞–Ω–Ω—ã–µ —é–∑–µ—Ä–∞
  const checkIfDataUpdated = (newUser) => {
    // —Å—Ç–∞–≤–ª—é —Å—Ç–µ–π—Ç –∫–Ω–æ–ø–∫–∏ –≤ –¢–†–£ –µ—Å–ª–∏ 1 –∏–∑ —Å–≤–æ–π—Å—Ç–≤ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ
    setIsDataUpdated(newUser.userName !== currentUser.userName
      || newUser.userEmail !== currentUser.userEmail);
  };

  // –ø–µ—Ä–µ–¥–∞—é –∫–æ–ª–±—ç–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
  const handleChange = (event) => {
    handleUserFormChange(event, liveUser, setLiveUser, errors, setErrors, checkIfDataUpdated);
  };

  const cbUpdateUser = async (userData) => {
    // —à–ª—é –ø—Ä–∞–≤–∫–∏ —é–∑–µ—Ä–∞ –≤ –ê–ü–ò. –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –û–ö - –æ–±–Ω–æ–≤–ª—è—é —é–∑–µ—Ä–∞ —Ö—É–∫–æ–º (—Å—Ç–µ–π—Ç –∏ –õ–°) –∏ –Ω–∞ –≥–ª–∞–≤–Ω—É—é.
    try {
      const rawUser = await updateUserApi(userData);

      // üî¥üü†üü°üü¢üîµ —Ç–µ—Å—Ç –æ—à–∏–±–æ–∫
      // const rawUser = await updateUserApiError(userData);

      const precessedUser = processUser(rawUser);
      setCurrentUser(precessedUser); // –æ–±–Ω–æ–≤–ª—è—é –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      setApiSuccess('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω'); // –ø–∏—à—É —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–¥ –∫–Ω–æ–ø–∫–æ–π
      setIsEditMode(false); // –ë–ª–æ–∫–∏—Ä—É—é —Ñ–æ—Ä–º—É
    } catch (error) {
      setApiError(error.message);
    }
  };

  function onEdit() {
    setApiSuccess('');
    setIsEditMode(true);
  }

  function handleSubmitUpdateProfile(e) {
    e.preventDefault();
    cbUpdateUser(liveUser);
  }

  return (
    <main className="profile">
      <h1 className="profile__title">{`–ü—Ä–∏–≤–µ—Ç, ${currentUser.userName}!`}</h1>
      <div className="profile__form-wrap">
        <form className="profile__form" onSubmit={handleSubmitUpdateProfile}>
          <div className="profile__input-wrap">
            <label htmlFor="name" className="profile__label">
              –ò–º—è
              <input
                name="userName"
                className="profile__input"
                value={liveUser.userName}
                onChange={handleChange}
                type="text"
                id="name"
                placeholder="–ò–º—è"
                minLength="2"
                maxLength="40"
                required
                readOnly={!isEditMode}
              />
            </label>
          </div>
          <span className="profile__input-error profile__input-error_email">
            {errors.userName}
          </span>

          <div className="profile__input-wrap">
            <label htmlFor="email" className="profile__label">
              E&#8209;mail
              <input
                name="userEmail"
                className="profile__input"
                value={liveUser.userEmail}
                onChange={handleChange}
                type="email"
                id="email"
                placeholder="E-mail"
                required
                readOnly={!isEditMode}
              />
            </label>
          </div>
          <span className="profile__input-error profile__input-error_email">
            {errors.userEmail}
          </span>

          <div className="profile__buttons-group">
            <span className="profile__submit-error">{apiError}</span>
            <span className="profile__submit-success">{apiSuccess}</span>
            <button className={editBtnClassName} onClick={onEdit} type="button">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
            <button disabled={!isDataUpdated} className={saveBtnClassName} type="submit">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
            <button className={logoutBtnClassName} onClick={onLogOut} type="button">–í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞</button>
          </div>

        </form>
      </div>
    </main>
  );
}

export default Profile;
