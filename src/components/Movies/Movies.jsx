import React, {
  useState, useRef, useEffect, useCallback,
} from 'react';
import './Movies.css';
import Preloader from '../Preloader/Preloader';
import MoviesCardList from '../MoviesCardList/MoviesCardList';
import SearchForm from '../SearchForm/SearchForm';
import FilterCheckbox from '../FilterCheckbox/FilterCheckbox';
import getAllMoviesFromApi from '../../utils/BeatFilmApi';
import LS_KEYS from '../../constants/localStorageKeys';
import ERR_MSG from '../../constants/errorMessages';
import processMovies from '../../utils/processMovies';
import getAllMoviesFromLs from '../../utils/getAllMoviesFromLs';

function Movies() {
  const searchFieldRef = useRef(null);

  const [filteredMovies, setFilteredMovies] = useState([]);
  const [isFetching, setFetching] = useState(false);
  const [isShort, setShort] = useState(JSON.parse(localStorage.getItem(LS_KEYS.isShortAll) || 'false'));
  const [fetchErrMsg, setFetchErrMsg] = useState('');

  async function getAllMovies() {
    setFetching(true);

    // eslint-disable-next-line no-debugger
    // debugger;
    const allMoviesFromLS = getAllMoviesFromLs();
    if (allMoviesFromLS.length !== 0) {
      setFetching(false);
      return allMoviesFromLS;
    }

    let processedMovies;
    try {
      const allMoviesFromApi = await getAllMoviesFromApi();
      // üç∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –º–∞—Å—Å–∏–≤, –ø—Ä–∏–≤–æ–¥—è –∫ –≤–∏–¥—É –±—ç–∫–∞
      processedMovies = processMovies(allMoviesFromApi);
      localStorage.setItem(LS_KEYS.allMovies, JSON.stringify(processedMovies));
    } catch (error) {
      setFetchErrMsg(error);
    }
    setFetching(false);
    return processedMovies;
  }

  /*
  escapeRegExp - –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–µ—Ü —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ,
  –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ —Ä–µ–≥—É–ª—è—Ä–∫–µ. –ù–∞–ø—Ä–∏–º–µ—Ä —Å–ª–µ—à –≤ —Å—Ç—Ä–æ–∫–µ "24/7" –∏–ª–∏ "WTF?".
  –ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É –≤ –∫–∞—á–µ—Å—Ç–≤–µ —á–∞—Å—Ç–∏ —Ä–µ–≥—É–ª—è—Ä–∫–∏, –Ω—É–∂–Ω–æ —É–±–µ–¥–∏—Ç—å—Å—è,
  —á—Ç–æ —Å–ø–µ—Ü —Å–∏–º–≤–æ–ª—ã —Ä–µ–≥—É–ª—è—Ä–æ–∫ –≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –¥–≤–∏–∂–∫–æ–º –ë–£–ö–í–ê–õ–¨–ù–û,
  –∞ –Ω–µ –∫–∞–∫ —á–∞—Å—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ —Ä–µ–≥—É–ª—è—Ä–∫–∏.
  */
  function escapeRegExp(string) {
    return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'); // $& –æ–∑–Ω–∞—á–∞–µ—Ç –≤—Å—é –Ω–∞–π–¥–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É
    // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Å–ø–µ—Ü —Å–∏–º–≤–æ–ª–∞–º–∏
  }

  // —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç–µ–ª—å —Å—Ç—Ä–æ–∫. 1—è —Å—Ç—Ä–æ–∫–∞ - –∑–∞–ø—Ä–æ—Å. 2—è —Å—Ç—Ä–æ–∫–∞ - —Ä–µ–≥—É–ª—è—Ä–∫–∞
  function compareStr(str1, str2) {
    const escapedStr1 = escapeRegExp(str1);
    const regex = new RegExp(`\\s*${escapedStr1}\\s*`, 'i');
    return regex.test(str2);
  }

  // –§–∏–ª—å—Ç—Ä—É—é –ø–æ –ø–æ–∏—Å–∫–æ–≤–æ–º –∑–∞–ø—Ä–æ—Å—É
  function filterMovies(movies) {
    const queryValue = searchFieldRef.current.value.trim();
    if (!queryValue) { return []; }
    // –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø—É—Å—Ç–∞ / —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏—à—å –ø—Ä–æ–±–µ–ª—ã, –≤–æ–∑–≤—Ä–∞—â–∞—é –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –≤–º–µ—Å—Ç–æ —Ñ–∏–ª—å–º–æ–≤.
    // –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–µ –ø—É—Å—Ç, —Ñ–∏–ª—å—Ç—Ä—É—é –º–∞—Å—Å–∏–≤. –û—Ç–∫–∏–¥—ã–≤–∞—é –≤—Å–µ —Ñ–∏–ª—å–º—ã, –Ω–µ –ø—Ä–æ—â–µ–¥—à–∏–µ –ø—Ä–æ–≤–µ—Ä–∫—É.
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã—à–µ - –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞  —Å –ª—é–±—ã–º
    return movies.filter((movie) => compareStr(queryValue, movie.nameRU)
      || compareStr(queryValue, movie.nameEN));
  }

  /*   useCallback –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π –µ–º—É —Ñ—É–Ω–∫—Ü–∏–∏,
  –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –ª–∏—à–Ω–∏–µ —Ä–µ—Ä–µ–Ω–¥–µ—Ä—ã,
  –æ—Å–æ–±–µ–Ω–Ω–æ –∫–æ–≥–¥–∞ —ç—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –¥–æ—á–∫–∞–º –≤ –≤–∏–¥–µ –ø—Ä–æ–ø—Å–æ–≤. */
  const searchMoviesAll = useCallback(async () => {
    try {
      localStorage.setItem(LS_KEYS.queryAll, searchFieldRef.current.value);

      // –∏–¥—É –∑–∞ 100. –ï—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å –≤ –õ–°, —Ñ–µ—Ç—á–∏—Ç—å –Ω–µ –±—É–¥—É. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å—Ç—Ä–æ–µ–Ω–∞ –≤ fetchAllMovies
      const allMovies = await getAllMovies();
      const filtered = filterMovies(allMovies); // –§–∏–ª—å—Ç—Ä—É—é –ø–æ –ø–æ–∏—Å–∫–æ–≤–æ–º –∑–∞–ø—Ä–æ—Å—É
      setFilteredMovies(filtered);
      localStorage.setItem(LS_KEYS.filtered, JSON.stringify(filtered));
    } catch (error) {
      console.error('Error occurred while searching for movies: ', error);
    }
  }, [isShort]);
  /*    –ï—Å–ª–∏ –±—ã —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –∑–∞–≤–∏—Å–µ–ª–∞ –æ—Ç –≤–Ω–µ—à–Ω–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, —É–∫–∞–∑–∞–ª –±—ã –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.
  –ß—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ searchMoviesAll –±–µ—Ä–µ—Ç —Å–≤–µ–∂–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ isShort –ø–æ—Å–ª–µ –µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è,
  –¥–æ–±–∞–≤–∏–ª isShort –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —é–∑–ö–æ–ª–±—ç–∫–∞ –¥–ª—è searchMoviesAll.
  –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è searchMoviesAll –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ isShort –∏–∑–º–µ–Ω—è–µ—Ç—Å—è.
  */
  const submitHandler = useCallback(async (e) => {
    e.preventDefault();
    await searchMoviesAll();
  }, [searchMoviesAll]); // –£–∫–∞–∑—ã–≤–∞–µ–º searchMoviesAll –∫–∞–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å

  const handleIsShort = useCallback(() => {
    setShort((prevIsShort) => {
      const newIsShortValue = !prevIsShort;
      return newIsShortValue;
    });
    searchMoviesAll();
  }, [searchMoviesAll]);

  useEffect(
    () => { localStorage.setItem(LS_KEYS.isShortAll, JSON.stringify(isShort)); },
    [isShort],
  );

  useEffect(() => {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è isShort –∏–∑ localStorage
    const initialIsShort = JSON.parse(localStorage.getItem(LS_KEYS.isShortAll) || 'false');
    setShort(initialIsShort);

    //  –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ / –ø—Ä–∏ –ú–û–ù–¢–ò–†–û–í–ê–ù–ò–ò –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤
    const filteredMoviesFromLS = JSON.parse(localStorage.getItem(LS_KEYS.filtered));
    if (filteredMoviesFromLS) {
      setFilteredMovies(filteredMoviesFromLS);
    }
  }, []);

  return (
    <main className="movies">
      <SearchForm
        onSubmit={submitHandler}
        searchFieldRef={searchFieldRef}
        query={LS_KEYS.queryAll}
      />
      <FilterCheckbox onChange={handleIsShort} isShort={isShort} />
      <div className="movies__search-results">
        {/* –µ—Å–ª–∏ –∏–¥–µ—Ç –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ê–ü–ò */}
        {isFetching ? <Preloader /> : ''}
        {/* –ï—Å–ª–∏ –ù–ï –∏–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ –∏ –µ—Å–ª–∏ –º–∞—Å—Å–∏–≤ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –Ω–µ –ø—É—Å—Ç - –ø–æ–∫–∞–∑—ã–≤–∞—é —Å–ø–∏—Å–æ–∫ */}
        {!isFetching && (filteredMovies.length > 0) && (
          <MoviesCardList filteredMovies={filteredMovies} />
        )}
        {/* –ï—Å–ª–∏ –ù–ï –∏–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ –∏ –º–∞—Å—Å–∏–≤ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç–æ–π, —Ç–æ –≤–º–µ—Å—Ç–æ —Å–ø–∏—Å–∫–∞ –¥–∞—é –æ—à–∏–±–∫—É */}
        {/* —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏:
          - –ø—Ä–∏ –ø—É—Å—Ç–æ–º –º–∞—Å—Å–∏–≤–µ = ERR_MSG.noResultsInAllMovies
          - –ø—Ä–∏ –æ—à–∏–±–∫–µ —Ñ–µ—Ç—á–∞ –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö = fetchAllMoviesErr */}
        {!isFetching && (filteredMovies.length === 0) && (fetchErrMsg === '')
          && (<h2>{ERR_MSG.noResultsInAllMovies}</h2>)}
        {!isFetching && (fetchErrMsg !== '') && (
          <h2>{ERR_MSG.fetchAllMoviesErr}</h2>
        )}
      </div>
    </main>
  );
}

export default Movies;
